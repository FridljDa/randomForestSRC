useDynLib(randomForestSRC)

importFrom("parallel", mclapply)
export(find.interaction.rfsrc,
       find.interaction,
       impute.rfsrc,
       max.subtree.rfsrc,
       max.subtree,
       plot.competing.risk.rfsrc,
       plot.competing.risk,
       plot.rfsrc,
       plot.survival.rfsrc,
       plot.survival,
       plot.variable.rfsrc,
       plot.variable,
       predict.rfsrc,
       print.rfsrc,
       rfsrc.news,
       rfsrc,
       rf2rfz,
       rfsrcSyn.rfsrc,
       rfsrcSyn,
       stat.split.rfsrc,
       stat.split,
       var.select.rfsrc,
       var.select,
       vimp.rfsrc,
       vimp)

S3method(print, rfsrc)
S3method(plot, rfsrc)
S3method(predict, rfsrc)
S3method(max, subtree)
S3method(max, subtree.rfsrc)
S3method(plot, competing.risk)
S3method(plot, competing.risk.rfsrc)
S3method(plot, variable)
S3method(plot, variable.rfsrc)
S3method(plot, survival)
S3method(plot, survival.rfsrc)

